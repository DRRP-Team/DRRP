/**
 * Copyright (c) 2017-2019 DRRP-Team
 *
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 */

// Compile game.acs!

// Map APIs 3000 - 3999

Script 3000 (int doorf, int doorb, bool nosound) { // Door Unlocker
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3000");
    if(!nosound) SectorSound(localizeSound("access/grant1"), 255);

    SetLineTexture(doorf, SIDE_FRONT, TEXTURE_TOP, "DRDC9");
    SetLineSpecial(doorf, Door_Raise, 0, 16, 105);
    if(doorb != 0) {
        SetLineTexture(doorb, SIDE_FRONT, TEXTURE_TOP, "DRDC9");
        SetLineSpecial(doorb, Door_Raise, 0, 16, 105);
    }
}

Script 3001 (void) { // Door Closed
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3001");
    ActivatorSound(localizeSound("access/deny1"), 255);
    Print(l:"DRRP_D_DOORCLOSED");
    Delay(34);
}

Script 3002 (int sectorid) { // Generic Door
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3002");
    Door_Raise(sectorid, 16, 105);
}

Script 3003 (int sectorid) { // Secret Door
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3003");
    Door_Open(sectorid, 128);
}

Script 3004 (void) { // Give Automap
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3004");
    GiveInventory("MapRevealer", 1);
}

Script 3005 (void) { // WIP Level
    SetFont("bigfont");
    Print(l:"DRRP_D_WIPLEVEL");
}

Script 3006 (void) { // Jammed door
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3006");
    if((ClassifyActor(0) & ACTOR_PLAYER) && stricmp(GetWeapon(), "DRRPAxe") == 0) {
        Radius_Quake2(0, 1, 17, 0, 128, "");
        Delay(17);
        Ceiling_RaiseToNearest(0, 4096);
    }
}

Script 3007 (int doorf, int doorb) { // Door Unlocker
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3000");

    SetLineTexture(doorf, SIDE_FRONT, TEXTURE_TOP, "DRDC8");
    SetLineSpecial(doorf, ACS_Execute, 3001);

    if(doorb != 0) {
        SetLineTexture(doorb, SIDE_FRONT, TEXTURE_TOP, "DRPGA10B");
        SetLineSpecial(doorb, ACS_Execute, 3001);
    }
}

Script 3008 (int time, int intensivity) { // DRPG Quake
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3008");
    if(intensivity <= 0) intensivity = 1;

    Radius_Quake(4 * intensivity, time / 29, 0, 1024, 0);
}

Script 3009 (int tid, bool fatal) { // Damage character
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3009");
    if(tid < 0) tid *= -1;

    SetActorState(tid, fatal ? "Death" : "Pain");
}

str SCRIPT_3010_KEYS[] = { "NULL", "DRRPRedCard", "DRRPBlueCard", "DRRPYellowCard", "NULL", "NULL", "NULL", "DRRPGreenCard" };

Script 3010 (int sectorid, int keyid, bool mute) { // Colorful door
    if(GetCVar("drrp_debug_mode")) Print(s:"[DEBUG]: Using correct Script 3010");
    if(!mute) {
        if(keyid && CheckInventory(SCRIPT_3010_KEYS[keyid])) {
            SectorSound(localizeSound("access/grant2"), 255);
        } else if(keyid) {
            SectorSound(localizeSound("access/deny2"), 255);
        }
        Delay(60);
    }
    Generic_Door(sectorid, 16, 0, 120, keyid);
}

Script 3011 (fixed x, fixed y, int direction) { // DRPG Teleport
    // TODO: Make some particles
    SetActorPosition(0, x, y, 0, 0);
}
