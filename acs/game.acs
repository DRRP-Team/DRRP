/**
 * Copyright (c) 2017-2018 DRRP-Team
 *
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 */

#library game
#include "zcommon.acs"

// Useful functions

function bool isLocalized(str string) {
    return !!strcmp(StrParam(l:string), string);
}

function int getStringWidth(str String) {
    int i = 0;
    while(String[i] != '\0') { i++; }
    return i;
}

function int getStringHeight(str String) {
    int i       = 0;
    int height = 0;

    while(String[i] != '\0') {
        if(String[i++] == '\n') height++;
    }
    return height;
}

function global str getThingName(int id, int state) {
    print(s:"getThingName(", i:id, s:", ", i:state, s:")");
    return "DRRPTODO";
}

// \\ Useful functions

script "fireextfade" (int mode) {
    // TODO: Use additive point light
    if(mode) {
        // Sector_SetFade(0, 255, 255, 255);
    } else {
        // Sector_SetFade(0, 0, 0, 0);
    }
}

// ACS based DRPG Window

Script "window"(str Text) { // s: -> str
    const int SYM_HEIGHT = 12; // Symbol's height is 12px

    delay(2);

    int ReadedKey;
    int ScrollY = 0;
    int height  = getStringHeight(Text);

    Thing_Stop(0); // TID_Player -> 0
    SetPlayerProperty(0, True, PROP_TOTALLYFROZEN);

    While (ReadedKey != BT_USE) {
        if(ReadedKey == BT_FORWARD && ScrollY > 0) {
            ScrollY -= SYM_HEIGHT;
            delay(4);
        }
        if(ReadedKey == BT_BACK && ScrollY < height * SYM_HEIGHT) {
            ScrollY += SYM_HEIGHT;
            delay(4);
        }

        SetHudSize(640, 480, true);
        SetHUDClipRect(0, 0, 0, 0, 0);
        SetFont("M_WINDOW");
        HudMessage(s: "A"; HUDMSG_PLAIN, -10000000, 0, 320.0, 320.1, 1);
        SetFont("SMALLFONT");
        SetHudClipRect(320 - 160 / 2 + 1, 320 + 1, 160 - 2, 70 - 2, 0, true);
        HudMessage(s: Text; HUDMSG_PLAIN, -10000001, CR_WHITE, ((320 - 160 / 2 + 1) << 16) + 3.0 + 0.1, 322.1 - (ScrollY << 16), 1);
        SetHudSize(0, 0, false);
        delay(1);
        ReadedKey = GetPlayerInput(-1, INPUT_BUTTONS);
    }

    HudMessage(s: ""; HUDMSG_PLAIN, -10000000, 0, 0.5, 0.8, 1);
    HudMessage(s: ""; HUDMSG_PLAIN, -10000001, 0, 0.5, 0.8, 1);
    SetPlayerProperty(0, False, PROP_TOTALLYFROZEN);
}

// ACS based DRPG Lock Window

Script "lockwindow"(str Text, str Password, int ScriptNumber, int ConversationArg) {
    const int SYM_HEIGHT = 12; // Symbol's height is 12px

    delay(2);

    int ReadedKey;
    int height  = getStringHeight(Text);

    Thing_Stop(0);
    SetPlayerProperty(0, True, PROP_TOTALLYFROZEN);

    While (ReadedKey != BT_USE) {
        SetHudSize(640, 480, true);
        SetHUDClipRect(0, 0, 0, 0, 0);
        SetFont("M_WINDOW");
        HudMessage(s: "A"; HUDMSG_PLAIN, -10000000, 0, 320.0, 320.1, 1);
        SetFont("SMALLFONT");
        SetHudClipRect(320 - 160 / 2 + 1, 320 + 1, 160 - 2, 70 - 2, 0, true);
        HudMessage(s: Text; HUDMSG_PLAIN, -10000001, CR_WHITE, ((320 - 160 / 2 + 1) << 16) + 3.0 + 0.1, 322.1 - (0 << 16), 1);
		HudMessage(s: Text; HUDMSG_PLAIN, -10000001, CR_WHITE, ((320 + 160 / 2 + 1) << 16) + 3.0 + 0.1, 322.1 - (10 << 16), 1);
        SetHudSize(0, 0, false);
        delay(1);
        ReadedKey = GetPlayerInput(-1, INPUT_BUTTONS);
    }

    HudMessage(s: ""; HUDMSG_PLAIN, -10000000, 0, 0.5, 0.8, 1);
    HudMessage(s: ""; HUDMSG_PLAIN, -10000001, 0, 0.5, 0.8, 1);
    SetPlayerProperty(0, False, PROP_TOTALLYFROZEN);
	
	ACS_ExecuteAlways(ScriptNumber, 0, 1, ConversationArg);
}

#include "flashlight.acs"
#include "mapapis.acs"
