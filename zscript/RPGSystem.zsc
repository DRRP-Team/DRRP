/**
 * Copyright (c) 2018-2019 DRRP-Team
 *
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 */


class RPGSystemHandler: EventHandler {

    override void OnRegister() {
        SetOrder( 670 );
    }

    override void WorldThingDamaged( WorldEvent e ) {

        if ( e.Thing != NULL && e.Inflictor != NULL && e.DamageSource != NULL ) {

            if ( e.Thing.health <= 0 ) {
                players[ 0 ].mo.ACS_NamedExecuteAlways( "onActorDie", 0, e.DamageSource is "DoomRPGPlayer" );
            }
        } // of if ( e.Thing != NULL && e.Inflictor != NULL && e.DamageSource != NULL ) { 
    } // override void WorldThingDamaged( WorldEvent e ) {

}

class DRRPDamageAbsorber: Inventory {
    default {
        +Inventory.UNDROPPABLE;
        Inventory.MaxAmount 1;
        Inventory.Amount 1;
    }

    override void AbsorbDamage( int damage, Name damageType, out int newdamage ) {
        if ( Owner == NULL || !( Owner is "DoomRPGPlayer" ) ) 
            return;

        newdamage = Owner.ACS_ScriptCall( "getRPGDefenseDamage", damage );
        //console.printf( "Pre-damage: " .. damage .. "; post-damage: " .. newdamage .. "." );
    }

}