/**
 * Copyright (c) 2021-2022 DRRP-Team
 * 
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 */

class DRRPBaseProjectile: Actor abstract {
    int projectileMinDamage, projectileMaxDamage;

    Default {
        Radius 13;
        Height 8;
        Speed 25;
        Damage 1; // Technically always overriden in "DoSpecialDamage()".
        Projectile;
        +RANDOMIZE;
        +ZDOOMTRANS;
        RenderStyle "Add";
        Alpha 0.75;
        SeeSound "";
        DeathSound "";
    }

    void SetDRRPDamage( int mind, int maxd ) {
        projectileMinDamage = mind;
        projectileMaxDamage = maxd;
    }

    override int DoSpecialDamage( Actor target, int damage, Name damagetype ) {
        //console.printf( GetClassName() .. ". Target: " .. target );
        Super.DoSpecialDamage( target, damage, damagetype );

        int newdmg = Random( projectileMinDamage, projectileMaxDamage );
        console.printf( GetClassName() .. ": dmg " .. newdmg .. " as rnd( " .. projectileMinDamage .. ", " .. projectileMaxDamage .. " )." );

        return newdmg;
    }
}

class DRRPFatShot: DRRPBaseProjectile {
    Default {
        Radius 6;
        Height 8;
        Speed 20;
        SeeSound "fatso/attack";
        DeathSound "fatso/shotx";
    }

    States {
    Spawn:
        MANF AB 4 BRIGHT;
        Loop;
    Death:
        MISL B 8 BRIGHT;
        MISL C 6 BRIGHT;
        MISL D 4 BRIGHT;
        Stop;
    }
}

class DRRPPainShot: DRRPFatShot {}


class DRRPRevenantTracer: RevenantTracer replaces RevenantTracer {
    Default {
        DamageFunction (6 * Random( 1, 8 ));
    }
}


class DRRPImplingBall: DoomImpBall {
    Default {
        DamageFunction (Random( 1, 3 ) * 3 + 3);
        Scale 0.5;
    }
}
class DRRPImpBall: DoomImpBall replaces DoomImpBall {
    Default {
        DamageFunction (Random( 1, 3 ) * 6 + 3);
    }
}
class DRRPImpLordBall: DoomImpBall {
    Default {
        DamageFunction (Random( 1, 3 ) * 9 + 3);
        Scale 1.5;
    }
}


class DRRPMalwrathBall: CacodemonBall {
    Default {
        DamageFunction (Random( 2, 5 ));
        Translation "168:180=224:231", "181:191=160:167", "253:253=164:164", "47:47=162:162", "208:223=224:231";
        Scale 0.8;
    }
}
class DRRPCacodemonBall: CacodemonBall replaces CacodemonBall {
    Default {
        DamageFunction (4 * Random( 3, 10 ) + 7);
        Scale 1.0;
    }
}
class DRRPWretchedBall: CacodemonBall {
    Default {
        DamageFunction (7 * Random( 5, 10 ) + 10);
        Translation "168:191=193:207", "167:167=244:244", "16:47=193:201", "192:207=168:184", "240:242=185:191", "223:223=207:207", "0:2=246:246";
        Scale 1.2;
    }
}


class DRRPOgreBall: BaronBall {
    Default {
        DamageFunction (2 * Random( 5, 8 ));
        Translation "112:127=176:191", "128:143=%[0.00,0.00,0.00]:[0.77,0.82,0.64]", "144:151=%[0.00,0.00,0.00]:[0.80,0.85,0.65]", "48:63=%[0.00,0.00,0.00]:[0.76,0.82,0.64]", "13:15=%[0.00,0.00,0.00]:[0.65,0.69,0.54]";
    }
}
class DRRPHellKnightBall: BaronBall {
    Default {
        DamageFunction (4 * Random( 5, 8 ));
    }
}
class DRRPBaronBall: BaronBall replaces BaronBall {
    Default {
        DamageFunction (8 * Random( 5, 8 ));
        Translation "112:127=160:167";
    }
}

