/**
 *Copyright (c) 2018-2019 DRRP-Team
 *
 *This software is released under the MIT License.
 *https://opensource.org/licenses/MIT
 */

class ConversationController play {
    static int GetArgument(int lineID) {
        if(lineID < 0) return GetActorArgument(-lineID);

        LineIdIterator it = LineIdIterator.Create(lineID);
        int itLineID      = it.Next();

        if (itLineID > 0) {
            Line convLine = level.Lines[itLineID];

            return convLine.args[4];
        } else {
            return -1;
        }
    }

    static bool SetArgument(int lineID, int lineArg) {
        if(lineID < 0) return SetActorArgument(-lineID, lineArg);
        LineIdIterator it = LineIdIterator.Create(lineID);
        int itLineID = -1;

        while ((itLineID = it.Next()) > 0) {
            Line convLine = level.Lines[itLineID];
            convLine.args[4] = lineArg;
        }

        return true;
    }

    static int GetActorArgument(int actorID, int special=80, int arg=4) {
        ActorIterator it = ActorIterator.Create(actorID);
        Actor actor      = null;

        while (actor = it.next()) {
            if (actor.special != special) continue;

            return actor.args[arg];
        }

        return -1;
    }

    static bool SetActorArgument(int actorID, int lineArg, int special=80, int arg=4) {
        ActorIterator it = ActorIterator.Create(actorID);
        Actor actor      = null;

        bool found = false;

        while (actor = it.Next()) {
            if (actor.special != special) continue;

            found = true;
            actor.args[arg] = lineArg;
        }

        return found;
    }

    static void SetGlobalfreeze( bool freezeset ) {
        if ( !multiplayer ) {
            for ( int i = 0; i < MAXPLAYERS; i++ ) {
                if ( playeringame[ i ] && players[ i ].mo ) {
                    DRRPPlayer player = DRRPPlayer( players[ i ].mo );

                    if ( freezeset ) {
                        player.PreFreezeVel = player.vel;
                        player.A_Stop();
                    } else {
                        player.vel = player.PreFreezeVel;
                    }
                }
            } // of for ( int i = 0; i < MAXPLAYERS; i++ ) {}

            level.frozen = freezeset;
        }

    } // of static void SetGlobalfreeze( bool freezeset ) {}

    static void SendEvent(String event, int arg1=0, int arg2=0, int arg3=0) {
        Console.Printf("SendEvent "..event.." "..arg1);
        EventHandler.SendNetworkEvent(event, arg1, arg2, arg3);
    }

}
